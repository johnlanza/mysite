<h1>My Book Summaries</h1>
<div class="container"></div>
<section>
  <% if (currentUser) { %>
  <a href="/books/newbook">Add a Book</a>
  <% } %>
  <p></p>
  <p>I'm adding all my book summaries here as I complete them. (And as time permits.)</p>
  <% for (let book of books) { %>
  <div class="book" id="book-<%= book._id %>">
    <div
      class="book-header"
      style="display: flex; justify-content: space-between">
      <section>
        <h3
          style="font-style: italic; cursor: pointer"
          onclick="toggleDetails('<%= book._id %>')">
          <%= book.title %>
        </h3>
        <h4
          style="font-style: italic; cursor: pointer; margin: 0"
          onclick="toggleDetails('<%= book._id %>')">
          by <%= book.author %>
        </h4>
      </section>
      <button
        class="toggle-btn"
        onclick="toggleDetails('<%= book._id %>')"
        style="
          background: none;
          border: none;
          cursor: pointer;
          font-size: 32px;
        ">
        ↧
      </button>
    </div>
    <div
      id="details-<%= book._id %>"
      class="book-details"
      style="display: none; margin-left: 5px">
      <p><strong>Summary:</strong> <%= book.summary %></p>
      <% if (book.notes) { %>
      <div class="notes" style="min-height: 100px"><%- book.notes %></div>
      <% } %>
      <p>
        <a href="<%= book.link %>" target="_blank">Goodreads</a>
        <a href="#" onclick="shareBook('<%= book.slug %>', '<%= book.title %>', '<%= book.author %>'); return false;">
          Share
      </a>
        </p>
      </p>
      <% if (currentUser) { %>
      <p>
        <a href="/books/<%= book._id %>/editbook" style="margin-right: 10px"
          >Edit</a
        >
        <a href="#" onclick="deleteBook('<%= book._id %>')">Delete</a>
      </p>
      <% } %>
    </div>
  </div>
  <% } %> <% if (currentUser) { %>
  <a href="/books/newbook">Add a Book</a>
  <% } %>
</section>

<script>
  const sharedSlug = "<%= sharedSlug || '' %>";
</script>

<script>
  let currentExpanded = null;

  function toggleDetails(bookId, skipUrlUpdate = false) {
  const details = document.getElementById(`details-${bookId}`);
  const bookElement = document.getElementById(`book-${bookId}`);
  const isCurrentlyVisible = details.style.display === "block";

  if (currentExpanded && currentExpanded !== details) {
    currentExpanded.style.display = "none";
    const previousButton =
      currentExpanded.previousElementSibling.querySelector(".toggle-btn");
    if (previousButton) {
      previousButton.textContent = "↧";
    }
  }

  if (!isCurrentlyVisible) {
    details.style.display = "block";
    const button =
      details.previousElementSibling.querySelector(".toggle-btn");
    if (button) {
      button.textContent = "🔝";
    }
    currentExpanded = details;

    if (!skipUrlUpdate) {
      const url = new URL(window.location);
      url.searchParams.set("book", bookId);
      url.hash = bookId;
      window.history.pushState({}, "", url);
    }

    bookElement.scrollIntoView({ behavior: "smooth", block: "start" });
  } else {
    details.style.display = "none";
    const button =
      details.previousElementSibling.querySelector(".toggle-btn");
    if (button) {
      button.textContent = "↧";
    }
    currentExpanded = null;

    if (!skipUrlUpdate) {
      const url = new URL(window.location);
      url.searchParams.delete("book");
      url.hash = "";
      window.history.pushState({}, "", url);
    }
  }
}

  function shareBook(bookSlug, title, author) {
    const shareUrl = `https://www.johnlanza.com/books/${bookSlug}`;
    const shareText = `Summary and notes for ${title} by ${author} - Check it out! 📚`;

    if (navigator.share) {
        navigator.share({
            title: title,
            text: shareText,
            url: shareUrl,
        })
        .then(() => console.log('Shared successfully!'))
        .catch((error) => console.log('Error sharing:', error));
    } else {
        // Fallback for unsupported browsers
        const tempInput = document.createElement("input");
        tempInput.value = `${shareText} ${shareUrl}`;
        document.body.appendChild(tempInput);
        tempInput.select();
        document.execCommand("copy");
        document.body.removeChild(tempInput);
        alert("Link copied to clipboard!");
    }
}

  // Open and scroll to book if ID is in the URL
  window.onload = function () {
  const urlParams = new URLSearchParams(window.location.search);
  const bookId = urlParams.get("book");

  if (bookId) {
    toggleDetails(bookId);
    scrollToBook(bookId);
  }

  if (sharedSlug) {
    setTimeout(async () => {
      try {
        const response = await fetch(`/books/book-id-from-slug/${sharedSlug}`);
        if (response.ok) {
          const data = await response.json();
          const id = data.id;
          console.log("Resolved book ID from slug:", id);

          toggleDetails(id, true); // expand the book

          // Wait and scroll after layout is stable
          setTimeout(() => {
  const bookElement = document.getElementById(`book-${id}`);
  console.log("Looking for book element:", `book-${id}`, bookElement);

  if (bookElement) {
    requestAnimationFrame(() => {
      requestAnimationFrame(() => {
        bookElement.scrollIntoView({ behavior: "smooth", block: "start" });
      });
    });
  } else {
    console.warn("Book element NOT found. Maybe not rendered yet?");
  }
}, 300);
        } else {
          console.warn("Book not found for slug:", sharedSlug);
        }
      } catch (err) {
        console.error("Error fetching book ID by slug:", err);
      }
    }, 300); // Initial delay for DOM load
  }
};

function scrollToBook(bookId) {
  const bookElement = document.getElementById(`book-${bookId}`);
  if (bookElement) {
    bookElement.scrollIntoView({ behavior: "smooth", block: "start" });
  }
}
</script>

<script>
  async function deleteBook(bookId) {
    try {
      const response = await fetch(`/books/${bookId}`, {
        method: "DELETE",
      });

      if (response.ok) {
        window.location.href = "/books";
      } else {
        console.error("Failed to delete book");
      }
    } catch (error) {
      console.error("Error deleting book:", error);
    }
  }
</script>
